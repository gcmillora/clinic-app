// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  uid       String    @unique
  name      String
  email     String    @unique
  address   String
  contact   String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  physician Booking[] @relation("physician")
  bookings  Booking[]
}

model Clinic {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  email     String    @unique
  contact   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  bookings  Booking[]
}

model Booking {
  id Int @id @default(autoincrement())

  user        User   @relation(fields: [userId], references: [id])
  clinic      Clinic @relation(fields: [clinicId], references: [id])
  physician   User   @relation("physician", fields: [physicianId], references: [id])
  physicianId Int
  userId      Int
  clinicId    Int

  appointment Appointment?
  date        DateTime
  status      Status       @default(PENDING)
  hasPaid     Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?
}

model Appointment {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  appointmentDate DateTime
  status          Status   @default(APPROVED)

  // 1 to 1 relationship
  booking   Booking @relation(fields: [bookingId], references: [id])
  bookingId Int     @unique
}

enum Role {
  ADMIN
  USER
  GUEST
  SUPERADMIN
}

enum Status {
  PENDING
  APPROVED
  ONGOING
  COMPLETED
  CANCELLED
  DELAYED
}
